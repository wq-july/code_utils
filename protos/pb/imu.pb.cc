// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: imu.proto

#include "imu.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_imu_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_imu_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PreIntegration;
}  // namespace protobuf_imu_2eproto
namespace protobuf_utils_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_utils_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Config;
}  // namespace protobuf_utils_2eproto
namespace IMUConfig {
class ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Config>
      _instance;
} _Config_default_instance_;
class PreIntegrationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PreIntegration>
      _instance;
} _PreIntegration_default_instance_;
class Vector3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3d>
      _instance;
} _Vector3d_default_instance_;
}  // namespace IMUConfig
namespace protobuf_imu_2eproto {
static void InitDefaultsConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMUConfig::_Config_default_instance_;
    new (ptr) ::IMUConfig::Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMUConfig::Config::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Config =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsConfig}, {
      &protobuf_imu_2eproto::scc_info_Vector3d.base,
      &protobuf_imu_2eproto::scc_info_PreIntegration.base,
      &protobuf_utils_2eproto::scc_info_Config.base,}};

static void InitDefaultsPreIntegration() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMUConfig::_PreIntegration_default_instance_;
    new (ptr) ::IMUConfig::PreIntegration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMUConfig::PreIntegration::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PreIntegration =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPreIntegration}, {
      &protobuf_imu_2eproto::scc_info_Vector3d.base,}};

static void InitDefaultsVector3d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IMUConfig::_Vector3d_default_instance_;
    new (ptr) ::IMUConfig::Vector3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::IMUConfig::Vector3d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector3d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector3d}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Config.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PreIntegration.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vector3d.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, imu_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, imu_topic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, transformation_i_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, rotation_i_c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, transformation_i_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, rotation_i_l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, transformation_i_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, rotation_i_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, preintegration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Config, utils_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::PreIntegration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::PreIntegration, init_ba_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::PreIntegration, init_bg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::PreIntegration, noise_acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::PreIntegration, noise_gyr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Vector3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Vector3d, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Vector3d, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::IMUConfig::Vector3d, z_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IMUConfig::Config)},
  { 16, -1, sizeof(::IMUConfig::PreIntegration)},
  { 25, -1, sizeof(::IMUConfig::Vector3d)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMUConfig::_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMUConfig::_PreIntegration_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::IMUConfig::_Vector3d_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "imu.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\timu.proto\022\tIMUConfig\032\013utils.proto\"\261\003\n\006"
      "Config\022\025\n\rimu_file_path\030\001 \001(\t\022\021\n\timu_top"
      "ic\030\002 \001(\t\022\021\n\tfrequency\030\003 \001(\005\022/\n\022transform"
      "ation_i_c\030\004 \001(\0132\023.IMUConfig.Vector3d\022)\n\014"
      "rotation_i_c\030\005 \001(\0132\023.IMUConfig.Vector3d\022"
      "/\n\022transformation_i_l\030\006 \001(\0132\023.IMUConfig."
      "Vector3d\022)\n\014rotation_i_l\030\007 \001(\0132\023.IMUConf"
      "ig.Vector3d\022/\n\022transformation_i_b\030\010 \001(\0132"
      "\023.IMUConfig.Vector3d\022)\n\014rotation_i_b\030\t \001"
      "(\0132\023.IMUConfig.Vector3d\0221\n\016preintegratio"
      "n\030\n \001(\0132\031.IMUConfig.PreIntegration\022#\n\014ut"
      "ils_config\030\013 \001(\0132\r.Utils.Config\"\202\001\n\016PreI"
      "ntegration\022$\n\007init_ba\030\001 \001(\0132\023.IMUConfig."
      "Vector3d\022$\n\007init_bg\030\002 \001(\0132\023.IMUConfig.Ve"
      "ctor3d\022\021\n\tnoise_acc\030\003 \001(\001\022\021\n\tnoise_gyr\030\004"
      " \001(\001\"+\n\010Vector3d\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\t"
      "\n\001z\030\003 \001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 657);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "imu.proto", &protobuf_RegisterTypes);
  ::protobuf_utils_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_imu_2eproto
namespace IMUConfig {

// ===================================================================

void Config::InitAsDefaultInstance() {
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->transformation_i_c_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->rotation_i_c_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->transformation_i_l_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->rotation_i_l_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->transformation_i_b_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->rotation_i_b_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->preintegration_ = const_cast< ::IMUConfig::PreIntegration*>(
      ::IMUConfig::PreIntegration::internal_default_instance());
  ::IMUConfig::_Config_default_instance_._instance.get_mutable()->utils_config_ = const_cast< ::Utils::Config*>(
      ::Utils::Config::internal_default_instance());
}
void Config::clear_utils_config() {
  if (GetArenaNoVirtual() == NULL && utils_config_ != NULL) {
    delete utils_config_;
  }
  utils_config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Config::kImuFilePathFieldNumber;
const int Config::kImuTopicFieldNumber;
const int Config::kFrequencyFieldNumber;
const int Config::kTransformationICFieldNumber;
const int Config::kRotationICFieldNumber;
const int Config::kTransformationILFieldNumber;
const int Config::kRotationILFieldNumber;
const int Config::kTransformationIBFieldNumber;
const int Config::kRotationIBFieldNumber;
const int Config::kPreintegrationFieldNumber;
const int Config::kUtilsConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Config::Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Config.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMUConfig.Config)
}
Config::Config(const Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imu_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imu_file_path().size() > 0) {
    imu_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imu_file_path_);
  }
  imu_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imu_topic().size() > 0) {
    imu_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imu_topic_);
  }
  if (from.has_transformation_i_c()) {
    transformation_i_c_ = new ::IMUConfig::Vector3d(*from.transformation_i_c_);
  } else {
    transformation_i_c_ = NULL;
  }
  if (from.has_rotation_i_c()) {
    rotation_i_c_ = new ::IMUConfig::Vector3d(*from.rotation_i_c_);
  } else {
    rotation_i_c_ = NULL;
  }
  if (from.has_transformation_i_l()) {
    transformation_i_l_ = new ::IMUConfig::Vector3d(*from.transformation_i_l_);
  } else {
    transformation_i_l_ = NULL;
  }
  if (from.has_rotation_i_l()) {
    rotation_i_l_ = new ::IMUConfig::Vector3d(*from.rotation_i_l_);
  } else {
    rotation_i_l_ = NULL;
  }
  if (from.has_transformation_i_b()) {
    transformation_i_b_ = new ::IMUConfig::Vector3d(*from.transformation_i_b_);
  } else {
    transformation_i_b_ = NULL;
  }
  if (from.has_rotation_i_b()) {
    rotation_i_b_ = new ::IMUConfig::Vector3d(*from.rotation_i_b_);
  } else {
    rotation_i_b_ = NULL;
  }
  if (from.has_preintegration()) {
    preintegration_ = new ::IMUConfig::PreIntegration(*from.preintegration_);
  } else {
    preintegration_ = NULL;
  }
  if (from.has_utils_config()) {
    utils_config_ = new ::Utils::Config(*from.utils_config_);
  } else {
    utils_config_ = NULL;
  }
  frequency_ = from.frequency_;
  // @@protoc_insertion_point(copy_constructor:IMUConfig.Config)
}

void Config::SharedCtor() {
  imu_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imu_topic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transformation_i_c_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frequency_) -
      reinterpret_cast<char*>(&transformation_i_c_)) + sizeof(frequency_));
}

Config::~Config() {
  // @@protoc_insertion_point(destructor:IMUConfig.Config)
  SharedDtor();
}

void Config::SharedDtor() {
  imu_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imu_topic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transformation_i_c_;
  if (this != internal_default_instance()) delete rotation_i_c_;
  if (this != internal_default_instance()) delete transformation_i_l_;
  if (this != internal_default_instance()) delete rotation_i_l_;
  if (this != internal_default_instance()) delete transformation_i_b_;
  if (this != internal_default_instance()) delete rotation_i_b_;
  if (this != internal_default_instance()) delete preintegration_;
  if (this != internal_default_instance()) delete utils_config_;
}

void Config::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Config::descriptor() {
  ::protobuf_imu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Config& Config::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Config.base);
  return *internal_default_instance();
}


void Config::Clear() {
// @@protoc_insertion_point(message_clear_start:IMUConfig.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imu_file_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imu_topic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transformation_i_c_ != NULL) {
    delete transformation_i_c_;
  }
  transformation_i_c_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_i_c_ != NULL) {
    delete rotation_i_c_;
  }
  rotation_i_c_ = NULL;
  if (GetArenaNoVirtual() == NULL && transformation_i_l_ != NULL) {
    delete transformation_i_l_;
  }
  transformation_i_l_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_i_l_ != NULL) {
    delete rotation_i_l_;
  }
  rotation_i_l_ = NULL;
  if (GetArenaNoVirtual() == NULL && transformation_i_b_ != NULL) {
    delete transformation_i_b_;
  }
  transformation_i_b_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_i_b_ != NULL) {
    delete rotation_i_b_;
  }
  rotation_i_b_ = NULL;
  if (GetArenaNoVirtual() == NULL && preintegration_ != NULL) {
    delete preintegration_;
  }
  preintegration_ = NULL;
  if (GetArenaNoVirtual() == NULL && utils_config_ != NULL) {
    delete utils_config_;
  }
  utils_config_ = NULL;
  frequency_ = 0;
  _internal_metadata_.Clear();
}

bool Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMUConfig.Config)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string imu_file_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imu_file_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imu_file_path().data(), static_cast<int>(this->imu_file_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IMUConfig.Config.imu_file_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string imu_topic = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imu_topic()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imu_topic().data(), static_cast<int>(this->imu_topic().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "IMUConfig.Config.imu_topic"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 frequency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.Vector3d transformation_i_c = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transformation_i_c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.Vector3d rotation_i_c = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation_i_c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.Vector3d transformation_i_l = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transformation_i_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.Vector3d rotation_i_l = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation_i_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.Vector3d transformation_i_b = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transformation_i_b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.Vector3d rotation_i_b = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation_i_b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.PreIntegration preintegration = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_preintegration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Utils.Config utils_config = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_utils_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMUConfig.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMUConfig.Config)
  return false;
#undef DO_
}

void Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMUConfig.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imu_file_path = 1;
  if (this->imu_file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imu_file_path().data(), static_cast<int>(this->imu_file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMUConfig.Config.imu_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->imu_file_path(), output);
  }

  // string imu_topic = 2;
  if (this->imu_topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imu_topic().data(), static_cast<int>(this->imu_topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMUConfig.Config.imu_topic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->imu_topic(), output);
  }

  // int32 frequency = 3;
  if (this->frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->frequency(), output);
  }

  // .IMUConfig.Vector3d transformation_i_c = 4;
  if (this->has_transformation_i_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_transformation_i_c(), output);
  }

  // .IMUConfig.Vector3d rotation_i_c = 5;
  if (this->has_rotation_i_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_rotation_i_c(), output);
  }

  // .IMUConfig.Vector3d transformation_i_l = 6;
  if (this->has_transformation_i_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_transformation_i_l(), output);
  }

  // .IMUConfig.Vector3d rotation_i_l = 7;
  if (this->has_rotation_i_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_rotation_i_l(), output);
  }

  // .IMUConfig.Vector3d transformation_i_b = 8;
  if (this->has_transformation_i_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_transformation_i_b(), output);
  }

  // .IMUConfig.Vector3d rotation_i_b = 9;
  if (this->has_rotation_i_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_rotation_i_b(), output);
  }

  // .IMUConfig.PreIntegration preintegration = 10;
  if (this->has_preintegration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_preintegration(), output);
  }

  // .Utils.Config utils_config = 11;
  if (this->has_utils_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_utils_config(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMUConfig.Config)
}

::google::protobuf::uint8* Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMUConfig.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imu_file_path = 1;
  if (this->imu_file_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imu_file_path().data(), static_cast<int>(this->imu_file_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMUConfig.Config.imu_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->imu_file_path(), target);
  }

  // string imu_topic = 2;
  if (this->imu_topic().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imu_topic().data(), static_cast<int>(this->imu_topic().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "IMUConfig.Config.imu_topic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->imu_topic(), target);
  }

  // int32 frequency = 3;
  if (this->frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->frequency(), target);
  }

  // .IMUConfig.Vector3d transformation_i_c = 4;
  if (this->has_transformation_i_c()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_transformation_i_c(), deterministic, target);
  }

  // .IMUConfig.Vector3d rotation_i_c = 5;
  if (this->has_rotation_i_c()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_rotation_i_c(), deterministic, target);
  }

  // .IMUConfig.Vector3d transformation_i_l = 6;
  if (this->has_transformation_i_l()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_transformation_i_l(), deterministic, target);
  }

  // .IMUConfig.Vector3d rotation_i_l = 7;
  if (this->has_rotation_i_l()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_rotation_i_l(), deterministic, target);
  }

  // .IMUConfig.Vector3d transformation_i_b = 8;
  if (this->has_transformation_i_b()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_transformation_i_b(), deterministic, target);
  }

  // .IMUConfig.Vector3d rotation_i_b = 9;
  if (this->has_rotation_i_b()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_rotation_i_b(), deterministic, target);
  }

  // .IMUConfig.PreIntegration preintegration = 10;
  if (this->has_preintegration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_preintegration(), deterministic, target);
  }

  // .Utils.Config utils_config = 11;
  if (this->has_utils_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_utils_config(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMUConfig.Config)
  return target;
}

size_t Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMUConfig.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string imu_file_path = 1;
  if (this->imu_file_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imu_file_path());
  }

  // string imu_topic = 2;
  if (this->imu_topic().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imu_topic());
  }

  // .IMUConfig.Vector3d transformation_i_c = 4;
  if (this->has_transformation_i_c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transformation_i_c_);
  }

  // .IMUConfig.Vector3d rotation_i_c = 5;
  if (this->has_rotation_i_c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_i_c_);
  }

  // .IMUConfig.Vector3d transformation_i_l = 6;
  if (this->has_transformation_i_l()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transformation_i_l_);
  }

  // .IMUConfig.Vector3d rotation_i_l = 7;
  if (this->has_rotation_i_l()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_i_l_);
  }

  // .IMUConfig.Vector3d transformation_i_b = 8;
  if (this->has_transformation_i_b()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transformation_i_b_);
  }

  // .IMUConfig.Vector3d rotation_i_b = 9;
  if (this->has_rotation_i_b()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_i_b_);
  }

  // .IMUConfig.PreIntegration preintegration = 10;
  if (this->has_preintegration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *preintegration_);
  }

  // .Utils.Config utils_config = 11;
  if (this->has_utils_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *utils_config_);
  }

  // int32 frequency = 3;
  if (this->frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->frequency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMUConfig.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMUConfig.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMUConfig.Config)
    MergeFrom(*source);
  }
}

void Config::MergeFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMUConfig.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imu_file_path().size() > 0) {

    imu_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imu_file_path_);
  }
  if (from.imu_topic().size() > 0) {

    imu_topic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imu_topic_);
  }
  if (from.has_transformation_i_c()) {
    mutable_transformation_i_c()->::IMUConfig::Vector3d::MergeFrom(from.transformation_i_c());
  }
  if (from.has_rotation_i_c()) {
    mutable_rotation_i_c()->::IMUConfig::Vector3d::MergeFrom(from.rotation_i_c());
  }
  if (from.has_transformation_i_l()) {
    mutable_transformation_i_l()->::IMUConfig::Vector3d::MergeFrom(from.transformation_i_l());
  }
  if (from.has_rotation_i_l()) {
    mutable_rotation_i_l()->::IMUConfig::Vector3d::MergeFrom(from.rotation_i_l());
  }
  if (from.has_transformation_i_b()) {
    mutable_transformation_i_b()->::IMUConfig::Vector3d::MergeFrom(from.transformation_i_b());
  }
  if (from.has_rotation_i_b()) {
    mutable_rotation_i_b()->::IMUConfig::Vector3d::MergeFrom(from.rotation_i_b());
  }
  if (from.has_preintegration()) {
    mutable_preintegration()->::IMUConfig::PreIntegration::MergeFrom(from.preintegration());
  }
  if (from.has_utils_config()) {
    mutable_utils_config()->::Utils::Config::MergeFrom(from.utils_config());
  }
  if (from.frequency() != 0) {
    set_frequency(from.frequency());
  }
}

void Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMUConfig.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Config::CopyFrom(const Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMUConfig.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Config::IsInitialized() const {
  return true;
}

void Config::Swap(Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Config::InternalSwap(Config* other) {
  using std::swap;
  imu_file_path_.Swap(&other->imu_file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imu_topic_.Swap(&other->imu_topic_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transformation_i_c_, other->transformation_i_c_);
  swap(rotation_i_c_, other->rotation_i_c_);
  swap(transformation_i_l_, other->transformation_i_l_);
  swap(rotation_i_l_, other->rotation_i_l_);
  swap(transformation_i_b_, other->transformation_i_b_);
  swap(rotation_i_b_, other->rotation_i_b_);
  swap(preintegration_, other->preintegration_);
  swap(utils_config_, other->utils_config_);
  swap(frequency_, other->frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Config::GetMetadata() const {
  protobuf_imu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PreIntegration::InitAsDefaultInstance() {
  ::IMUConfig::_PreIntegration_default_instance_._instance.get_mutable()->init_ba_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
  ::IMUConfig::_PreIntegration_default_instance_._instance.get_mutable()->init_bg_ = const_cast< ::IMUConfig::Vector3d*>(
      ::IMUConfig::Vector3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PreIntegration::kInitBaFieldNumber;
const int PreIntegration::kInitBgFieldNumber;
const int PreIntegration::kNoiseAccFieldNumber;
const int PreIntegration::kNoiseGyrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PreIntegration::PreIntegration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_PreIntegration.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMUConfig.PreIntegration)
}
PreIntegration::PreIntegration(const PreIntegration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_init_ba()) {
    init_ba_ = new ::IMUConfig::Vector3d(*from.init_ba_);
  } else {
    init_ba_ = NULL;
  }
  if (from.has_init_bg()) {
    init_bg_ = new ::IMUConfig::Vector3d(*from.init_bg_);
  } else {
    init_bg_ = NULL;
  }
  ::memcpy(&noise_acc_, &from.noise_acc_,
    static_cast<size_t>(reinterpret_cast<char*>(&noise_gyr_) -
    reinterpret_cast<char*>(&noise_acc_)) + sizeof(noise_gyr_));
  // @@protoc_insertion_point(copy_constructor:IMUConfig.PreIntegration)
}

void PreIntegration::SharedCtor() {
  ::memset(&init_ba_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noise_gyr_) -
      reinterpret_cast<char*>(&init_ba_)) + sizeof(noise_gyr_));
}

PreIntegration::~PreIntegration() {
  // @@protoc_insertion_point(destructor:IMUConfig.PreIntegration)
  SharedDtor();
}

void PreIntegration::SharedDtor() {
  if (this != internal_default_instance()) delete init_ba_;
  if (this != internal_default_instance()) delete init_bg_;
}

void PreIntegration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PreIntegration::descriptor() {
  ::protobuf_imu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PreIntegration& PreIntegration::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_PreIntegration.base);
  return *internal_default_instance();
}


void PreIntegration::Clear() {
// @@protoc_insertion_point(message_clear_start:IMUConfig.PreIntegration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && init_ba_ != NULL) {
    delete init_ba_;
  }
  init_ba_ = NULL;
  if (GetArenaNoVirtual() == NULL && init_bg_ != NULL) {
    delete init_bg_;
  }
  init_bg_ = NULL;
  ::memset(&noise_acc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noise_gyr_) -
      reinterpret_cast<char*>(&noise_acc_)) + sizeof(noise_gyr_));
  _internal_metadata_.Clear();
}

bool PreIntegration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMUConfig.PreIntegration)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .IMUConfig.Vector3d init_ba = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init_ba()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .IMUConfig.Vector3d init_bg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_init_bg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double noise_acc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &noise_acc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double noise_gyr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &noise_gyr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMUConfig.PreIntegration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMUConfig.PreIntegration)
  return false;
#undef DO_
}

void PreIntegration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMUConfig.PreIntegration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMUConfig.Vector3d init_ba = 1;
  if (this->has_init_ba()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_init_ba(), output);
  }

  // .IMUConfig.Vector3d init_bg = 2;
  if (this->has_init_bg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_init_bg(), output);
  }

  // double noise_acc = 3;
  if (this->noise_acc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->noise_acc(), output);
  }

  // double noise_gyr = 4;
  if (this->noise_gyr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->noise_gyr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMUConfig.PreIntegration)
}

::google::protobuf::uint8* PreIntegration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMUConfig.PreIntegration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IMUConfig.Vector3d init_ba = 1;
  if (this->has_init_ba()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_init_ba(), deterministic, target);
  }

  // .IMUConfig.Vector3d init_bg = 2;
  if (this->has_init_bg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_init_bg(), deterministic, target);
  }

  // double noise_acc = 3;
  if (this->noise_acc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->noise_acc(), target);
  }

  // double noise_gyr = 4;
  if (this->noise_gyr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->noise_gyr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMUConfig.PreIntegration)
  return target;
}

size_t PreIntegration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMUConfig.PreIntegration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .IMUConfig.Vector3d init_ba = 1;
  if (this->has_init_ba()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *init_ba_);
  }

  // .IMUConfig.Vector3d init_bg = 2;
  if (this->has_init_bg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *init_bg_);
  }

  // double noise_acc = 3;
  if (this->noise_acc() != 0) {
    total_size += 1 + 8;
  }

  // double noise_gyr = 4;
  if (this->noise_gyr() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreIntegration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMUConfig.PreIntegration)
  GOOGLE_DCHECK_NE(&from, this);
  const PreIntegration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PreIntegration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMUConfig.PreIntegration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMUConfig.PreIntegration)
    MergeFrom(*source);
  }
}

void PreIntegration::MergeFrom(const PreIntegration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMUConfig.PreIntegration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_init_ba()) {
    mutable_init_ba()->::IMUConfig::Vector3d::MergeFrom(from.init_ba());
  }
  if (from.has_init_bg()) {
    mutable_init_bg()->::IMUConfig::Vector3d::MergeFrom(from.init_bg());
  }
  if (from.noise_acc() != 0) {
    set_noise_acc(from.noise_acc());
  }
  if (from.noise_gyr() != 0) {
    set_noise_gyr(from.noise_gyr());
  }
}

void PreIntegration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMUConfig.PreIntegration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreIntegration::CopyFrom(const PreIntegration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMUConfig.PreIntegration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreIntegration::IsInitialized() const {
  return true;
}

void PreIntegration::Swap(PreIntegration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PreIntegration::InternalSwap(PreIntegration* other) {
  using std::swap;
  swap(init_ba_, other->init_ba_);
  swap(init_bg_, other->init_bg_);
  swap(noise_acc_, other->noise_acc_);
  swap(noise_gyr_, other->noise_gyr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PreIntegration::GetMetadata() const {
  protobuf_imu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3d::kXFieldNumber;
const int Vector3d::kYFieldNumber;
const int Vector3d::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3d::Vector3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_imu_2eproto::scc_info_Vector3d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:IMUConfig.Vector3d)
}
Vector3d::Vector3d(const Vector3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:IMUConfig.Vector3d)
}

void Vector3d::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vector3d::~Vector3d() {
  // @@protoc_insertion_point(destructor:IMUConfig.Vector3d)
  SharedDtor();
}

void Vector3d::SharedDtor() {
}

void Vector3d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector3d::descriptor() {
  ::protobuf_imu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imu_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3d& Vector3d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_imu_2eproto::scc_info_Vector3d.base);
  return *internal_default_instance();
}


void Vector3d::Clear() {
// @@protoc_insertion_point(message_clear_start:IMUConfig.Vector3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IMUConfig.Vector3d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IMUConfig.Vector3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IMUConfig.Vector3d)
  return false;
#undef DO_
}

void Vector3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IMUConfig.Vector3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:IMUConfig.Vector3d)
}

::google::protobuf::uint8* Vector3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:IMUConfig.Vector3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IMUConfig.Vector3d)
  return target;
}

size_t Vector3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IMUConfig.Vector3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IMUConfig.Vector3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IMUConfig.Vector3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IMUConfig.Vector3d)
    MergeFrom(*source);
  }
}

void Vector3d::MergeFrom(const Vector3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IMUConfig.Vector3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IMUConfig.Vector3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3d::CopyFrom(const Vector3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IMUConfig.Vector3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3d::IsInitialized() const {
  return true;
}

void Vector3d::Swap(Vector3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3d::InternalSwap(Vector3d* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector3d::GetMetadata() const {
  protobuf_imu_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_imu_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace IMUConfig
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMUConfig::Config* Arena::CreateMaybeMessage< ::IMUConfig::Config >(Arena* arena) {
  return Arena::CreateInternal< ::IMUConfig::Config >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMUConfig::PreIntegration* Arena::CreateMaybeMessage< ::IMUConfig::PreIntegration >(Arena* arena) {
  return Arena::CreateInternal< ::IMUConfig::PreIntegration >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::IMUConfig::Vector3d* Arena::CreateMaybeMessage< ::IMUConfig::Vector3d >(Arena* arena) {
  return Arena::CreateInternal< ::IMUConfig::Vector3d >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
